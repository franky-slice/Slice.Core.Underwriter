// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Slice.Core.Underwriter.Common.Constants;
using Slice.Core.Underwriter.Data;
using System;

namespace Slice.Core.Underwriter.Data.Migrations
{
    [DbContext(typeof(WeatherContext))]
    [Migration("20171213223711_InitialSetup")]
    partial class InitialSetup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("weather")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("Slice.Core.Underwriter.Data.Models.Override", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Area")
                        .HasColumnName("area");

                    b.Property<string>("Country")
                        .HasColumnName("country");

                    b.Property<int?>("CreatedById")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnName("created_on");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnName("deleted_by");

                    b.Property<DateTime>("EndsOn")
                        .HasColumnName("ends_on");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("is_deleted");

                    b.Property<int?>("ModifiedById")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnName("modified_on");

                    b.Property<int>("OverrideType")
                        .HasColumnName("override_type");

                    b.Property<DateTime>("StartsOn")
                        .HasColumnName("starts_on");

                    b.Property<int>("WarningType")
                        .HasColumnName("warning_type");

                    b.HasKey("Id")
                        .HasName("pk_override");

                    b.ToTable("override");
                });

            modelBuilder.Entity("Slice.Core.Underwriter.Data.Models.Warning", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Area")
                        .HasColumnName("area");

                    b.Property<string>("Country")
                        .HasColumnName("country");

                    b.Property<int?>("CreatedById")
                        .HasColumnName("created_by_id");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnName("created_on");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnName("deleted_by");

                    b.Property<DateTime>("EndsOn")
                        .HasColumnName("ends_on");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("is_deleted");

                    b.Property<int?>("ModifiedById")
                        .HasColumnName("modified_by_id");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnName("modified_on");

                    b.Property<DateTime>("SearchedOn")
                        .HasColumnName("searched_on");

                    b.Property<DateTime>("StartsOn")
                        .HasColumnName("starts_on");

                    b.Property<int>("WarningType")
                        .HasColumnName("warning_type");

                    b.HasKey("Id")
                        .HasName("pk_warnings");

                    b.ToTable("warnings");
                });
#pragma warning restore 612, 618
        }
    }
}
